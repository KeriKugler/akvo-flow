Dir.chdir File.dirname(__FILE__)

APPNAME = 'akvo-flow'
VERSION = File.read('VERSION').strip

require 'json'
require 'rake-pipeline-web-filters'

WebFilters = Rake::Pipeline::Web::Filters

class LoaderFilter < WebFilters::MinispadeFilter
  def generate_output(inputs, output)
    inputs.each do |input|
      code = input.read
      module_id = @module_id_generator.call(input)
      contents = "function(require) {\n#{code}\n}"
      ret = "\nloader.register('#{module_id}', #{contents});\n"
      output.write ret
    end
  end
end

class EmberAssertFilter < Filter
  def generate_output(inputs, output)
    inputs.each do |input|
      result = input.read
      result.gsub!(%r{^(\s)*Ember\.(assert|deprecate|warn)\((.*)\).*$}, '')
      output.write(result)
    end
  end
end

class VersionFilter < Filter
  def generate_output(inputs, output)
    inputs.each do |input|
      code = input.read
      code.gsub! %r/{{VERSION}}/, VERSION
      output.write(code)
    end
  end
end

output '../GAE/war/admin'

input 'app' do
  match '*.html' do
    copy
  end

  match 'lib/core.js' do
    filter VersionFilter
  end

  match 'lib/**/*.js' do
    filter LoaderFilter,
      :module_id_generator => proc { |input|
        input.path.sub(/^lib\//, "#{APPNAME}/").sub(/\.js$/, '')
      }

    if ENV['RAKEP_ENV'] == 'production'
      filter EmberAssertFilter
      uglify {|input| input}
    end
    concat 'app.js'
  end

  match 'vendor/**/*.*' do
    copy
  end

  match 'modules/**/*.js' do
    if ENV['RAKEP_ENV'] == 'production'
      filter EmberAssertFilter
      uglify {|input| input}
    end
    concat 'app.js'
  end

  match 'plugins/**/*.js' do
    if ENV['RAKEP_ENV'] == 'production'
      uglify {|input| input}
    end
    concat do |input|
      input.sub(/plugins\//, '')
    end
  end

  match 'templates/**/*.handlebars' do

    filter WebFilters::HandlebarsFilter,
      :key_name_proc => proc { |input|

        base = input.path.split('/')[1]
        name = File.basename(input.path, File.extname(input.path))

        if base.start_with?(name)
          name
        else
          base + '/' + name
        end
      }

    if ENV['RAKEP_ENV'] == 'production'
      uglify {|input| input}
    end

    concat 'app.js'
  end

  match 'tests/**/*.js' do
    concat 'app-tests.js'
  end

  match 'css/**/*.css' do
    if ENV['RAKEP_ENV'] == 'production'
      yui_css
    end
    concat ['main.css'], 'app.css'
  end

  match 'css/**/*.scss' do
    sass
    if ENV['RAKEP_ENV'] == 'production'
      yui_css
    end
    concat 'app.css'
  end

  match "static/**/*" do
    concat do |input|
      input.sub(/static\//, '')
    end
  end
end

# vim: filetype=ruby
